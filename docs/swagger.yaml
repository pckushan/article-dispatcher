openapi: 3.0.3
info:
  title: Article Dispatcher - OpenAPI 3.0
  description: |-
    This is the API documentation for the article dispatcher service
  version: 1.0.0
tags:
  - name: article
    description: Everything about articles
paths:
  /articles:
    post:
      tags:
        - article
      summary: Add a new article
      description: Add a new article
      operationId: addArticle
      requestBody:
        description: Create a new article
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleRequestBody'
        required: true
      responses:
        '201':
          description: article successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '400':
          description: invalid request body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputError'

  /articles/{id}:
    get:
      tags:
        - article
      summary: Find article by ID
      description: Returns a single article
      operationId: getArticleById
      parameters:
        - name: id
          in: path
          description: ID of article to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: article retrieve successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '400':
          description: article ID validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleIDValidationError'
        '404':
          description: article not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

  /tags/{tagName}/{date}:
    get:
      tags:
        - article
      summary: Filter article by tag and date
      description: Returns articles' data with tag and date filter
      operationId: getArticleDataFiltered
      parameters:
        - name: tagName
          in: path
          description: tag name to be filtered
          required: true
          schema:
            type: string
            example: "nature"
        - name: date
          in: path
          description: date to be filtered
          required: true
          schema:
            type: integer
            example: 20230122
      responses:
        '200':
          description: tagged article retrieve successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggedDateArticle'
        '400':
          description: invalid request path params.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggedArticleValidationError'
        '404':
          description: article not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

components:
  schemas:
    ArticleRequestBody:
      type: object
      properties:
        title:
          type: string
          example: "latest science shows that potato chips are better for you than sugar"
        date:
          type: string
          example: "2023-10-22"
        body:
          type: string
          example: "some text, potentially containing simple markup about how potato chips are great"
        tags:
          type: array
          example: [ "nature","fitness" ]
    Article:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: "latest science shows that potato chips are better for you than sugar"
        date:
          type: string
          example: "2023-10-22"
        body:
          type: string
          example: "some text, potentially containing simple markup about how potato chips are great"
        tags:
          type: array
          example: [ "nature","fitness" ]
    TaggedDateArticle:
      type: object
      properties:
        tag:
          type: string
          example: "nature"
        count:
          type: integer
          format: int64
          example: 3
        articles:
          type: array
          example: ["1","4"]
        related_tags:
          type: array
          example: [ "fun","fitness" ]

    Success:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 10
    InvalidInputError:
      type: object
      properties:
          code:
            type: integer
            format: int64
            example: 40013
          description:
            type: string
            example: "invalid request body due to, Key: 'Article.Date' Error:Field validation for 'Date' failed on the 'datetime' tag"
          trace:
            type: string
            example: "2840f52e-844d-44d8-a603-4e49b647022d"
    NotFoundError:
      type: object
      properties:
        code:
          type: integer
          format: int64
          example: 40012
        description:
          type: string
          example:  "error, no article found with id [11]"
        trace:
          type: string
          example: "2840f52e-844d-44d8-a603-4e49b647022d"
    ArticleIDValidationError:
      type: object
      properties:
        code:
          type: integer
          format: int64
          example: 40013
        description:
          type: string
          example:  "invalid article id format"
        trace:
          type: string
          example: "2840f52e-844d-44d8-a603-4e49b647022d"
    TaggedArticleValidationError:
      type: object
      properties:
        code:
          type: integer
          format: int64
          example: 40013
        description:
          type: string
          example:  "invalid article date format"
        trace:
          type: string
          example: "2840f52e-844d-44d8-a603-4e49b647022d"
    UnIdentifiedError:
      type: object
      properties:
        code:
          type: integer
          format: int64
          example: 40012
        description:
          type: string
          example: "something went wrong."
        trace:
          type: string
          example: "2840f52e-844d-44d8-a603-4e49b647022d"

      xml:
        name: customer

  requestBodies:
    Article:
      description: Article object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Article'